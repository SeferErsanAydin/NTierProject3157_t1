1=> Proje N-Tier mimari paternine göre yazýlacaktýr.

2=> Projede acýlacak katmanlar
ENTITIES,
MAP,
DAL,
BLL,
COMMON (Ortak kullanýlacak sýnýflarýn tutulacagý katman olacaktýr),
API - UI (Projemizi dýsarý acmak istedigimiz icin actýgýmýz ayrý bir katmandýr),
DTO(API'daki esnekligimizin proje bazlý artmasý icin acacagýmýz katmandýr),
UI(MVC olarak düsünlmüþtür)

3 => Projede degiþken isimleri degiþkenler local variable oldugu sürece camelCase, field oldugu sürece basýnda _ sembolü olmak üzere camelCase; Property, metot ve class isimleri PascalCase standartlarýnda yazýlacaktýr ve projede Türkçe karakter kullanýlmayacaktýr. CLass isimleri kesinlikle cogul olmayacaktýr.

4=> Katman isimleri Project ile baslayarak . sembolünden sonra katmansal takýlarla bitecektir(Project.ENTITIES vs...)

5=> Tasarým patternlerinden Generic Repository, Singleton Pattern ve Strategy Pattern kesinlikle kullanýlacaktýr... Mevcut algoritmada bu tasarým paternlerinin dýsýnda bir baska Tasarým Paterni öngörülmemektedir...Ancak projenin esnekligi buna elveriþli olduðu takdirde, projenin mimari paterniyle bir çakýþma olmadýðý takdirde (bu durum özel olarak istenecek olan bir Arge süreci icerisinde hemen belirlenmek zorundadýr) gerekli görülürse rahatca eklenebilecektir...